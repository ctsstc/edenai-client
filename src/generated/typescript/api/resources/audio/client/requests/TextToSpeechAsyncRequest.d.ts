/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as EdenAi from "../../../..";
export interface TextToSpeechAsyncRequest {
    /** It can be one (ex: **'amazon'** or **'google'**) or multiple provider(s) (ex: **'amazon,microsoft,google'**)             that the data will be redirected to in order to get the processed results. <span style="white-space: nowrap">`non-empty`</span> */
    providers: string;
    /**
     * Providers in this list will be used as fallback if the call to provider in `providers` parameter fails.
     *     To use this feature, you must input **only one** provider in the `providers` parameter. but you can put up to 5 fallbacks.
     *
     * They will be tried in the same order they are input, and it will stop to the first provider who doesn't fail.
     *
     *
     * *Doesn't work with async subfeatures.*
     *      <span style="white-space: nowrap">`non-empty`</span>
     */
    fallbackProviders?: string;
    /**
     * Optional : Shows the original response of the provider.<br>
     *         When set to **true**, a new attribute *original_response* will appear in the response object.
     */
    showOriginalResponse?: boolean;
    /** Webhook receiver should be a valid https URL (ex : https://your.listner.com/endpoint).             After the processing is done, the webhook endpoint will receive a POST request with the result. <span style="white-space: nowrap">`non-empty`</span> */
    webhookReceiver?: string;
    /** Json data that contains of additional parameters that will be sent back to the webhook receiver             (ex: api key for security or client's data ID to link the result internally).             Will only be used when webhook_receiver is set. */
    usersWebhookParameters?: Record<string, unknown>;
    /**
     * A dictionnary or a json object to specify specific models to use for some providers. <br>                     It can be in the following format: {'google' : 'google_model', ibm': 'ibm_model'...}.
     *                      **Caution**: setting models can be done only with `Content-Type` : `application/json`.
     *
     */
    settings?: Record<string, string | undefined>;
    /** Text to analyze <span style="white-space: nowrap">`non-empty`</span> */
    text: string;
    /** Language code expected (ex: en, fr) */
    language?: string;
    option?: EdenAi.TextToSpeechAsyncRequestOption;
    /** Increase or decrease the speaking rate by expressing a positif or negatif number ranging between             100 and -100 (a relative value as percentage varying from -100% to 100%) */
    rate?: number;
    /** Increase or decrease the speaking pitch by expressing a positif or negatif number ranging between             100 and -100 (a relative value as percentage varying from -100% to 100%) */
    pitch?: number;
    /** Increase or decrease the audio volume by expressing a positif or negatif number ranging between             100 and -100 (a relative value as percentage varying from -100% to 100%) */
    volume?: number;
    /** Optional parameter to specify the audio format in which the audio will be generated. By default,             audios are encoded in MP3, except for lovoai which use the wav container. */
    audioFormat?: string;
    /** Optional. The synthesis sample rate (in hertz) for this audio. When this is specified, the audio will be converted             either to the right passed value, or to a the nearest value acceptable by the provider */
    samplingRate?: number;
}
