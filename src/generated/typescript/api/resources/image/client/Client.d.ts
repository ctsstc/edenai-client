/**
 * This file was auto-generated by Fern from our API Definition.
 */
/// <reference types="node" />
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as fs from "fs";
import * as EdenAi from "../../..";
export declare namespace Image {
    interface Options {
        environment?: core.Supplier<environments.EdenAiEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}
export declare class Image {
    protected readonly _options: Image.Options;
    constructor(_options: Image.Options);
    /**
     * <details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>
     *
     *
     *
     * |Name|Version|Price|Billing unit|
     * |----|-------|-----|------------|
     * |**api4ai**|`v1.0.0`|25.0 (per 1000 file)|1 file
     *
     *
     * </details>
     *
     *
     * @throws {@link EdenAi.BadRequestError}
     * @throws {@link EdenAi.ForbiddenError}
     * @throws {@link EdenAi.NotFoundError}
     * @throws {@link EdenAi.InternalServerError}
     */
    anonymizationCreate(file: File | fs.ReadStream, request: EdenAi.ImageAnonymizationCreateRequest, requestOptions?: Image.RequestOptions): Promise<EdenAi.ImageanonymizationResponseModel>;
    /**
     * <details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>
     *
     *
     *
     * |Name|Version|Price|Billing unit|
     * |----|-------|-----|------------|
     * |**amazon**|`boto3 (v1.15.18)`|1.0 (per 1000 file)|1 file
     * |**clarifai**|`8.0.0`|2.0 (per 1000 file)|1 file
     * |**google**|`v1`|1.5 (per 1000 file)|1 file
     * |**microsoft**|`v3.2`|1.0 (per 1000 file)|1 file
     * |**sentisight**|`v3.3.1`|1.0 (per 1000 file)|1 file
     * |**picpurify**|`v1.1`|2.0 (per 1000 file)|1 file
     * |**api4ai**|`v1.0.0`|0.75 (per 1000 file)|1 file
     *
     *
     * </details>
     *
     *
     * @throws {@link EdenAi.BadRequestError}
     * @throws {@link EdenAi.ForbiddenError}
     * @throws {@link EdenAi.NotFoundError}
     * @throws {@link EdenAi.InternalServerError}
     */
    explicitContentCreate(file: File | fs.ReadStream, request: EdenAi.ImageExplicitContentCreateRequest, requestOptions?: Image.RequestOptions): Promise<EdenAi.ImageexplicitContentResponseModel>;
    /**
     * <details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>
     *
     *
     *
     * |Name|Version|Price|Billing unit|
     * |----|-------|-----|------------|
     * |**base64**|`latest`|0.25 (per 1 request)|1 request
     * |**facepp**|`v3`|2.0 (per 1000 request)|1 request
     * |**amazon**|`boto3 (v1.15.18)`|1.0 (per 1000 request)|1 request
     *
     *
     * </details>
     *
     *
     * @throws {@link EdenAi.BadRequestError}
     * @throws {@link EdenAi.ForbiddenError}
     * @throws {@link EdenAi.NotFoundError}
     * @throws {@link EdenAi.InternalServerError}
     */
    faceCompareCreate(file1: File | fs.ReadStream, file2: File | fs.ReadStream, request: EdenAi.ImagefaceCompareFaceCompareRequest, requestOptions?: Image.RequestOptions): Promise<EdenAi.ImagefaceCompareResponseModel>;
    /**
     * <details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>
     *
     *
     *
     * |Name|Version|Price|Billing unit|
     * |----|-------|-----|------------|
     * |**amazon**|`boto3 (v1.15.18)`|1.0 (per 1000 file)|1 file
     * |**clarifai**|`8.0.0`|2.0 (per 1000 file)|1 file
     * |**google**|`v1`|1.5 (per 1000 file)|1 file
     * |**microsoft**|`v3.2`|1.0 (per 1000 file)|1 file
     * |**api4ai**|`v1.0.0`|0.75 (per 1000 file)|1 file
     * |**picpurify**|`v1.1`|1.2 (per 1000 file)|1 file
     * |**skybiometry**|`v1`|1.0 (per 1000 file)|1 file
     *
     *
     * </details>
     *
     *
     * @throws {@link EdenAi.BadRequestError}
     * @throws {@link EdenAi.ForbiddenError}
     * @throws {@link EdenAi.NotFoundError}
     * @throws {@link EdenAi.InternalServerError}
     */
    faceDetectionCreate(file: File | fs.ReadStream, request: EdenAi.ImagefaceDetectionFaceDetectionRequest, requestOptions?: Image.RequestOptions): Promise<EdenAi.ImagefaceDetectionResponseModel>;
    /**
     * <details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>
     *
     *
     *
     * |Name|Version|Price|Billing unit|
     * |----|-------|-----|------------|
     * |**amazon**|`boto3 1.26.8`|1.0 (per 1000 file)|1 file
     * |**microsoft**|`Face API - v1.0`|1.0 (per 1000 file)|1 file
     * |**facepp**|`v3`|0.6 (per 1000 request)|1 request
     *
     *
     * </details>
     *
     *
     * @throws {@link EdenAi.BadRequestError}
     * @throws {@link EdenAi.ForbiddenError}
     * @throws {@link EdenAi.NotFoundError}
     * @throws {@link EdenAi.InternalServerError}
     */
    faceRecognitionAddFaceCreate(file: File | fs.ReadStream, request: EdenAi.ImageFaceRecognitionAddFaceCreateRequest, requestOptions?: Image.RequestOptions): Promise<EdenAi.ImagefaceRecognitionResponseModel>;
    /**
     * <details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>
     *
     *
     *
     * |Name|Version|Price|Billing unit|
     * |----|-------|-----|------------|
     * |**amazon**|`boto3 1.26.8`|free|-
     * |**microsoft**|`Face API - v1.0`|free|-
     * |**facepp**|`v3`|0.1 (per 1000 request)|1 request
     *
     *
     * </details>
     *
     *
     * @throws {@link EdenAi.BadRequestError}
     * @throws {@link EdenAi.ForbiddenError}
     * @throws {@link EdenAi.NotFoundError}
     * @throws {@link EdenAi.InternalServerError}
     */
    faceRecognitionDeleteFaceCreate(request: EdenAi.ImagefaceRecognitiondeleteFaceFaceRecognitionDeleteFaceRequest, requestOptions?: Image.RequestOptions): Promise<EdenAi.ImagefaceRecognitionResponseModel>;
    /**
     * <details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>
     *
     *
     *
     * |Name|Version|Price|Billing unit|
     * |----|-------|-----|------------|
     * |**amazon**|`boto3 1.26.8`|free|-
     * |**microsoft**|`Face API - v1.0`|free|-
     * |**facepp**|`v3`|0.1 (per 1000 request)|1 request
     *
     *
     * </details>
     *
     *
     * @throws {@link EdenAi.BadRequestError}
     * @throws {@link EdenAi.ForbiddenError}
     * @throws {@link EdenAi.NotFoundError}
     * @throws {@link EdenAi.InternalServerError}
     */
    faceRecognitionListFacesRetrieve(request: EdenAi.ImageFaceRecognitionListFacesRetrieveRequest, requestOptions?: Image.RequestOptions): Promise<EdenAi.ImagefaceRecognitionResponseModel>;
    /**
     * <details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>
     *
     *
     *
     * |Name|Version|Price|Billing unit|
     * |----|-------|-----|------------|
     * |**amazon**|`boto3 1.26.8`|1.0 (per 1000 file)|1 file
     * |**microsoft**|`Face API - v1.0`|1.0 (per 1000 file)|1 file
     * |**facepp**|`v3`|2.0 (per 1000 request)|1 request
     *
     *
     * </details>
     *
     *
     * @throws {@link EdenAi.BadRequestError}
     * @throws {@link EdenAi.ForbiddenError}
     * @throws {@link EdenAi.NotFoundError}
     * @throws {@link EdenAi.InternalServerError}
     */
    faceRecognitionRecognizeCreate(file: File | fs.ReadStream, request: EdenAi.ImageFaceRecognitionRecognizeCreateRequest, requestOptions?: Image.RequestOptions): Promise<EdenAi.ImagefaceRecognitionResponseModel>;
    /**
     * <details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>
     *
     *
     *
     * |Name|Version|Resolution|Price|Billing unit|
     * |----|-------|------|-----|------------|
     * |**deepai**|`v1Beta`|-|0.05 (per 1 request)|1 request
     * |**openai**|`v1Beta`|`256x256`|0.016 (per 1 image)|1 image
     * |**openai**|`v1Beta`|`512x512`|0.018 (per 1 image)|1 image
     * |**openai**|`v1Beta`|`1024x1024`|0.02 (per 1 image)|1 image
     * |**stabilityai**|`v1Beta`|`512x512`|0.004 (per 1 image)|1 image
     * |**stabilityai**|`v1Beta`|`1024x1024`|0.032 (per 1 image)|1 image
     *
     *
     * </details>
     *
     *
     * @throws {@link EdenAi.BadRequestError}
     * @throws {@link EdenAi.ForbiddenError}
     * @throws {@link EdenAi.NotFoundError}
     * @throws {@link EdenAi.InternalServerError}
     */
    generationCreate(request: EdenAi.ImagegenerationGenerationRequest, requestOptions?: Image.RequestOptions): Promise<EdenAi.ImagegenerationResponseModel>;
    /**
     * <details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>
     *
     *
     *
     * |Name|Version|Price|Billing unit|
     * |----|-------|-----|------------|
     * |**google**|`v1`|1.5 (per 1000 file)|1 file
     * |**microsoft**|`v3.2`|1.0 (per 1000 file)|1 file
     *
     *
     * </details>
     *
     *
     * @throws {@link EdenAi.BadRequestError}
     * @throws {@link EdenAi.ForbiddenError}
     * @throws {@link EdenAi.NotFoundError}
     * @throws {@link EdenAi.InternalServerError}
     */
    landmarkDetectionCreate(file: File | fs.ReadStream, request: EdenAi.ImageLandmarkDetectionCreateRequest, requestOptions?: Image.RequestOptions): Promise<EdenAi.ImagelandmarkDetectionResponseModel>;
    /**
     * <details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>
     *
     *
     *
     * |Name|Version|Price|Billing unit|
     * |----|-------|-----|------------|
     * |**google**|`v1`|1.5 (per 1000 file)|1 file
     * |**microsoft**|`v3.2`|1.0 (per 1000 file)|1 file
     * |**smartclick**|`v3.2`|0.5 (per 1000 file)|1 file
     * |**api4ai**|`v1.0.0`|0.25 (per 1000 file)|1 file
     * |**clarifai**|`8.0.0`|2.0 (per 1000 file)|1 file
     *
     *
     * </details>
     *
     *
     * @throws {@link EdenAi.BadRequestError}
     * @throws {@link EdenAi.ForbiddenError}
     * @throws {@link EdenAi.NotFoundError}
     * @throws {@link EdenAi.InternalServerError}
     */
    logoDetectionCreate(file: File | fs.ReadStream, request: EdenAi.ImageLogoDetectionCreateRequest, requestOptions?: Image.RequestOptions): Promise<EdenAi.ImagelogoDetectionResponseModel>;
    /**
     * <details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>
     *
     *
     *
     * |Name|Version|Price|Billing unit|
     * |----|-------|-----|------------|
     * |**amazon**|`boto3 (v1.15.18)`|1.0 (per 1000 file)|1 file
     * |**api4ai**|`1.9.2`|0.5 (per 1000 file)|1 file
     * |**clarifai**|`8.0.0`|2.0 (per 1000 file)|1 file
     * |**google**|`v1`|2.25 (per 1000 file)|1 file
     * |**microsoft**|`v3.2`|1.0 (per 1000 file)|1 file
     * |**sentisight**|`v3.3.1`|1.0 (per 1000 file)|1 file
     *
     *
     * </details>
     *
     *
     * @throws {@link EdenAi.BadRequestError}
     * @throws {@link EdenAi.ForbiddenError}
     * @throws {@link EdenAi.NotFoundError}
     * @throws {@link EdenAi.InternalServerError}
     */
    objectDetectionCreate(file: File | fs.ReadStream, request: EdenAi.ImageobjectDetectionObjectDetectionRequest, requestOptions?: Image.RequestOptions): Promise<EdenAi.ImageobjectDetectionResponseModel>;
    /**
     * <details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>
     *
     *
     *
     * |Name|Version|Price|Billing unit|
     * |----|-------|-----|------------|
     * |**sentisight**|`v3.3.1`|free|-
     *
     *
     * </details>
     *
     *
     * @throws {@link EdenAi.BadRequestError}
     * @throws {@link EdenAi.ForbiddenError}
     * @throws {@link EdenAi.NotFoundError}
     * @throws {@link EdenAi.InternalServerError}
     */
    searchDeleteImageCreate(request: EdenAi.ImagesearchdeleteImageDeleteImageRequest, requestOptions?: Image.RequestOptions): Promise<EdenAi.ImagesearchResponseModel>;
    /**
     * <details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>
     *
     *
     *
     * |Name|Version|Price|Billing unit|
     * |----|-------|-----|------------|
     * |**sentisight**|`v3.3.1`|free|-
     *
     *
     * </details>
     *
     *
     * @throws {@link EdenAi.BadRequestError}
     * @throws {@link EdenAi.ForbiddenError}
     * @throws {@link EdenAi.NotFoundError}
     * @throws {@link EdenAi.InternalServerError}
     */
    searchGetImageRetrieve(request: EdenAi.ImageSearchGetImageRetrieveRequest, requestOptions?: Image.RequestOptions): Promise<EdenAi.ImagesearchResponseModel>;
    /**
     * <details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>
     *
     *
     *
     * |Name|Version|Price|Billing unit|
     * |----|-------|-----|------------|
     * |**sentisight**|`v3.3.1`|free|-
     *
     *
     * </details>
     *
     *
     * @throws {@link EdenAi.BadRequestError}
     * @throws {@link EdenAi.ForbiddenError}
     * @throws {@link EdenAi.NotFoundError}
     * @throws {@link EdenAi.InternalServerError}
     */
    searchGetImagesRetrieve(request: EdenAi.ImageSearchGetImagesRetrieveRequest, requestOptions?: Image.RequestOptions): Promise<EdenAi.ImagesearchResponseModel>;
    /**
     * <details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>
     *
     *
     *
     * |Name|Version|Price|Billing unit|
     * |----|-------|-----|------------|
     * |**sentisight**|`v3.3.1`|1.0 (per 1000 file)|1 file
     *
     *
     * </details>
     *
     *
     * @throws {@link EdenAi.BadRequestError}
     * @throws {@link EdenAi.ForbiddenError}
     * @throws {@link EdenAi.NotFoundError}
     * @throws {@link EdenAi.InternalServerError}
     */
    searchLaunchSimilarityCreate(file: File | fs.ReadStream, request: EdenAi.ImagesearchlaunchSimilaritySearchImageRequest, requestOptions?: Image.RequestOptions): Promise<EdenAi.ImagesearchResponseModel>;
    /**
     * <details><summary><strong style='color: #0072a3; cursor: pointer'>Available Providers</strong></summary>
     *
     *
     *
     * |Name|Version|Price|Billing unit|
     * |----|-------|-----|------------|
     * |**sentisight**|`v3.3.1`|1.0 (per 1000 file)|1 file
     *
     *
     * </details>
     *
     *
     * @throws {@link EdenAi.BadRequestError}
     * @throws {@link EdenAi.ForbiddenError}
     * @throws {@link EdenAi.NotFoundError}
     * @throws {@link EdenAi.InternalServerError}
     */
    searchUploadImageCreate(file: File | fs.ReadStream, request: EdenAi.ImagesearchuploadImageUploadImageRequest, requestOptions?: Image.RequestOptions): Promise<EdenAi.ImagesearchResponseModel>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
