/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as EdenAi from "../../..";
export declare namespace Infos {
    interface Options {
        environment?: core.Supplier<environments.EdenAiEnvironment | string>;
        token?: core.Supplier<core.BearerToken | undefined>;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
    }
}
export declare class Infos {
    protected readonly _options: Infos.Options;
    constructor(_options: Infos.Options);
    /**
     * List Provider and features relations : You can get a list of *all providers* for a *feature* or *all features* for a *given provider*.
     *
     * You can have the detailed information on the **pricing**, **supported languages** as well as the **models** for providers who propose different models (eg: voice models available for a text to speech provider).
     *
     * Example : If you want the detailed list of all providers that can analyse the sentiment of a text written in french, you'd need to set `feature__name=text`,  `subfeature__name=sentiment_analysis` and `languages=fr`.
     *
     * Which will look like the following :
     *
     *
     * ```bash
     * curl --request GET  https://api.edenai.run/v2/info/provider_subfeatures?subfeature__name=sentiment_analysis&feature__name=text&languages=fr
     * ```
     */
    infoProviderSubfeaturesList(request?: EdenAi.InfoProviderSubfeaturesListRequest, requestOptions?: Infos.RequestOptions): Promise<EdenAi.ProviderSubfeature[]>;
    protected _getAuthorizationHeader(): Promise<string | undefined>;
}
